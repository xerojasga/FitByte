/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core.views.ingredients;

import com.mycompany.fitbyte_app.ConnectionProvider;
import core.DAO.IngredientDAO;
import core.models.Ingredient;
import core.views.HomeView;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.table.DefaultTableModel;
import user.models.User;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class IngredientCatalogue extends javax.swing.JFrame {
    DefaultTableModel model = new DefaultTableModel();
    
    
    private static final Connection connection = ConnectionProvider.connection;
    public static User current_user;

    /**
     * Creates new form IngredientCatalogue
     */
    public IngredientCatalogue(User user) {
        initComponents();
        current_user = user;
        ArrayList <Object> columns = new ArrayList<Object>();
        columns.add("IDENTIFIER");
        columns.add("NAME");
        columns.add("BRAND");
        for(Object column :columns){
            model.addColumn(column);
        }
        IngredientsTBL.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        IngredientsTBL = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jpImagen = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        carbsTP = new javax.swing.JTextField();
        protTP = new javax.swing.JTextField();
        calTP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dataBTN = new javax.swing.JButton();
        cargeBTN = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        createBTN = new javax.swing.JButton();
        eraseBTN = new javax.swing.JButton();
        exitBTN = new javax.swing.JButton();
        modifyBTN = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        IngredientsTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(IngredientsTBL);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Catalogo De Ingredientes");

        javax.swing.GroupLayout jpImagenLayout = new javax.swing.GroupLayout(jpImagen);
        jpImagen.setLayout(jpImagenLayout);
        jpImagenLayout.setHorizontalGroup(
            jpImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );
        jpImagenLayout.setVerticalGroup(
            jpImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );

        jLabel2.setText("Carbohidratos:");

        jLabel3.setText("Proteinas:");

        jLabel4.setText("Calorias:");

        dataBTN.setText("Datos de la seleccion");
        dataBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataBTNActionPerformed(evt);
            }
        });

        cargeBTN.setText("Llenar la tabla");
        cargeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargeBTNActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        createBTN.setText("AÃ±adir");
        createBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBTNActionPerformed(evt);
            }
        });

        eraseBTN.setText("Eliminar");
        eraseBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraseBTNActionPerformed(evt);
            }
        });

        exitBTN.setText("Volver a Home");
        exitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTNActionPerformed(evt);
            }
        });

        modifyBTN.setText("Modificar");
        modifyBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jpImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cargeBTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dataBTN))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(createBTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modifyBTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eraseBTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                .addComponent(exitBTN))
                            .addComponent(jSeparator3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(41, 41, 41)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(48, 48, 48)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(calTP, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(protTP)
                            .addComponent(carbsTP))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cargeBTN)
                            .addComponent(dataBTN))
                        .addGap(11, 11, 11)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exitBTN)
                            .addComponent(eraseBTN)
                            .addComponent(modifyBTN)
                            .addComponent(createBTN)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(carbsTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(protTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(calTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargeBTNActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        ArrayList <Object> columns = new ArrayList<Object>();
        columns.add("IDENTIFIER");
        columns.add("NAME");
        columns.add("BRAND");
        for(Object column :columns){
            model.addColumn(column);
        }
        
        ArrayList<Ingredient> ingredients = IngredientDAO.findAll();
        System.out.println(ingredients);
        for(Ingredient i : ingredients){
            Object[] data = new Object[]{i.getId_ingredient(),i.getName(),i.getBrand_id()};
            model.addRow(data);
        }
        IngredientsTBL.setModel(model);
    }//GEN-LAST:event_cargeBTNActionPerformed

    private void dataBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataBTNActionPerformed
        // TODO add your handling code here:
        int row = IngredientsTBL.getSelectedRow();
        int ingredient_sel_id = (int) IngredientsTBL.getValueAt(row, 0);
        
        Ingredient dummy = IngredientDAO.findExtra(ingredient_sel_id);
        
        carbsTP.setText(String.valueOf(dummy.getCarbohidrates()));
        calTP.setText(String.valueOf(dummy.getCalories()));
        protTP.setText(String.valueOf(dummy.getProteins()));
        
        carbsTP.updateUI();
        calTP.updateUI();
        protTP.updateUI();
        
        PreparedStatement ps;
        ResultSet rs;
        ConnectionProvider objCon = new ConnectionProvider();
        
        try {
            ps = connection.prepareStatement(IngredientDAO.DISPLAY_SQL);
            ps.setInt(1, ingredient_sel_id);
            rs = ps.executeQuery();
            
            BufferedImage buffimg = null;
            byte[] image = null;
            while(rs.next()){
                image = rs.getBytes("IMAGEN");
                InputStream img = rs.getBinaryStream("IMAGEN");
                
                try {
                    buffimg = ImageIO.read(img);
                    ImageMySQL imagen = new ImageMySQL(jpImagen.getHeight(),jpImagen.getWidth(),buffimg);
                    jpImagen.add(imagen);
                    jpImagen.repaint();
                } catch (IOException ex) {
                    Logger.getLogger(IngredientImageAdd.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(IngredientImageAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dataBTNActionPerformed

    private void createBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBTNActionPerformed
        // TODO add your handling code here:
        this.dispose();
        IngredientCreate n = new IngredientCreate(current_user);
        n.setVisible(true);
    }//GEN-LAST:event_createBTNActionPerformed

    private void modifyBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyBTNActionPerformed
        // TODO add your handling code here:
        this.dispose();
        IngredientEditor n = new IngredientEditor(current_user);
        n.setVisible(true);
    }//GEN-LAST:event_modifyBTNActionPerformed

    private void eraseBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraseBTNActionPerformed
        // TODO add your handling code here:
        this.dispose();
        IngredientDelete n = new IngredientDelete(current_user);
        n.setVisible(true);
    }//GEN-LAST:event_eraseBTNActionPerformed

    private void exitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTNActionPerformed
        // TODO add your handling code here:
        this.dispose();
        HomeView home = new HomeView(current_user);
        home.setVisible(true);
    }//GEN-LAST:event_exitBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngredientCatalogue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngredientCatalogue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngredientCatalogue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngredientCatalogue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IngredientCatalogue(current_user).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable IngredientsTBL;
    private javax.swing.JTextField calTP;
    private javax.swing.JTextField carbsTP;
    private javax.swing.JButton cargeBTN;
    private javax.swing.JButton createBTN;
    private javax.swing.JButton dataBTN;
    private javax.swing.JButton eraseBTN;
    private javax.swing.JButton exitBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPanel jpImagen;
    private javax.swing.JButton modifyBTN;
    private javax.swing.JTextField protTP;
    // End of variables declaration//GEN-END:variables
}
